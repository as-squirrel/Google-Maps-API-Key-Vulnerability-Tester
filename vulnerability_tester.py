import requests
import json
import logging
from requests.exceptions import RequestException
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def test_api(url, api_name):
    try:
        response = requests.get(url, verify=False)
        response.raise_for_status()
        
        print(f"API key is \033[1;31;40m vulnerable \033[0m for {api_name} Here is the Link")
        print(url)
        return True

    except RequestException as e:
        print("Not vulnerable")
        print(f"Reason: {str(e)}")
        return False

def test_post_api(url, api_name, postdata):
    try:
        response = requests.post(url, data=postdata, verify=False)
        response.raise_for_status()

        print(f"API key is \033[1;31;40m vulnerable \033[0m for {api_name} API! BOOM! Here is the Link")
        print(f"curl -i -s -k  -X $'POST' -H $'Host: www.googleapis.com' -H $'Content-Length: {len(json.dumps(postdata))}' --data-binary $'{json.dumps(postdata)}' $'{url}'")
        return True

    except RequestException as e:
        print("Not vulnerable")
        print(f"Reason: {str(e)}")
        return False

def print_ascii_intro(github_username):
    intro = '''
            Welcome to Google Maps API Key Vulnerability Tester!
        
                                              _                        _
   __ _   ___           ___    __ _   _   _  (_)  _ __   _ __    ___  | |
  / _` | / __|  _____  / __|  / _` | | | | | | | | '__| | '__|  / _ \ | |
 | (_| | \__ \ |_____| \__ \ | (_| | | |_| | | | | |    | |    |  __/ | |
  \__,_| |___/         |___/  \__, |  \__,_| |_| |_|    |_|     \___| |_|
            /     /           _-~| |    ~-_        |   /
           (      (        _-~    _--_    ~-_     _/   |
            \      ~-____-~    _-~    ~-_    ~-_-~    /
              ~-_           _-~          ~-_       _-~
                 ~--______-~                ~-___-~
        '''
    print(intro)
    print(f" {github_username}\n")

def test_endpoint(url, api_name, vulnerable_apis):
    if test_api(url, api_name):
        vulnerable_apis.append(api_name)

def main():
    logging.basicConfig(filename='api_key_testing.log', level=logging.INFO)

    print_ascii_intro("as-squirrel") 

    vulnerable_apis = []
    apikey = input("Enter the Google Maps API Key > ")

    endpoints = [
    ("Staticmap", f"https://maps.googleapis.com/maps/api/staticmap?center=45%2C10&zoom=7&size=400x400&key={apikey}"),
    ("Streetview", f"https://maps.googleapis.com/maps/api/streetview?size=400x400&location=40.720032,-73.988354&fov=90&heading=235&pitch=10&key={apikey}"),
    ("Embed (Basic-Free)", f"https://www.google.com/maps/embed/v1/place?q=Seattle&key={apikey}"),
    ("Embed (Advanced-Paid)", f"https://www.google.com/maps/embed/v1/search?q=record+stores+in+Seattle&key={apikey}"),
    ("Directions", f"https://maps.googleapis.com/maps/api/directions/json?origin=Disneyland&destination=Universal+Studios+Hollywood4&key={apikey}"),
    ("Geocode", f"https://maps.googleapis.com/maps/api/geocode/json?latlng=40,30&key={apikey}"),
    ("Distance Matrix", f"https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=40.6655101,-73.89188969999998&destinations=40.6905615%2C-73.9976592%7C40.6905615%2C-73.9976592&key={apikey}"),
    ("Find Place From Text", f"https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=Museum%20of%20Contemporary%20Art%20Australia&inputtype=textquery&fields=photos,formatted_address,name,rating,opening_hours,geometry&key={apikey}"),
    ("Autocomplete", f"https://maps.googleapis.com/maps/api/place/autocomplete/json?input=Bingh&types=%28cities%29&key={apikey}"),
    ("Elevation", f"https://maps.googleapis.com/maps/api/elevation/json?locations=39.7391536,-104.9847034&key={apikey}"),
    ("Timezone", f"https://maps.googleapis.com/maps/api/timezone/json?location=39.6034810,-119.6822510&timestamp=1331161200&key={apikey}"),
    ("Roads", f"https://roads.googleapis.com/v1/nearestRoads?points=60.170880,24.942795|60.170879,24.942796|60.170877,24.942796&key={apikey}"),
    ("Geolocation", f"https://www.googleapis.com/geolocation/v1/geolocate?key={apikey}")
    ]
    for api_name, endpoint_url in endpoints:
        test_endpoint(endpoint_url, api_name, vulnerable_apis)

    print("\nResults:")
    for api in vulnerable_apis:
        print(f"- {api}")

if __name__ == "__main__":
    main()

